name: Alerts & Brief MarsVenus

on:
  schedule:
    - cron: "6 * * * *"   # stündlich :06 UTC
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: alerts-${{ github.ref }}
  cancel-in-progress: false

jobs:
  alerts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # 1) Verbraucher: nur weiter, wenn MAIN bereits produziert hat
      - name: Check alerts.json exists
        run: |
          if [ ! -s docs/alerts.json ]; then
            echo "ℹ️  docs/alerts.json fehlt oder ist leer – MAIN hat (noch) nicht geschrieben. EXIT 0."
            exit 0
          fi
          echo "===== docs/alerts.json (first 40) ====="
          sed -n '1,40p' docs/alerts.json || true

      # 2) Brief rendern (ohne Here-Doc; eigener Renderer)
      - name: Render Markdown brief
        run: |
          mkdir -p docs
          if [ -f tools/render_alerts_md.py ]; then
            python tools/render_alerts_md.py
          else
            # minimaler Fallback, falls script fehlt
            echo "# Alerts Brief — $(date -u +"%Y-%m-%d %H:%M UTC")" > docs/alerts_brief.md
            echo "_(renderer missing – fallback)_" >> docs/alerts_brief.md
          fi
          echo "===== docs/alerts_brief.md (first 60) ====="
          sed -n '1,60p' docs/alerts_brief.md || true

      # 3) Commit & Push (idempotent)
      - name: Commit & push brief
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/alerts_brief.md || true
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "CI(alerts): update brief ($(date -u +'%Y-%m-%dT%H:%MZ'))"
            git push origin HEAD:main --force
          fi

      # 4) Telegram (nur wenn Alerts vorhanden + Secrets gesetzt)
      - name: Telegram notify (only if alerts)
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID }}
          RUN_URL:  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          # Secrets nicht vorhanden → sauber skippen
          if [ -z "${TG_TOKEN}" ] || [ -z "${TG_CHAT}" ]; then
            echo "Telegram secrets not set — skipping."
            exit 0
          fi
          # schnelle Prüfung auf Alerts
          if ! grep -q '"alerts": \[' docs/alerts.json; then
            echo "No alerts found — skipping Telegram."
            exit 0
          fi
          {
            echo "🚨 Alerts-Run Mars/Venus"
            echo "${RUN_URL}"
            echo ""
            echo "--- First lines of docs/alerts.json ---"
            head -n 10 docs/alerts.json || echo "{}"
          } > /tmp/tg_msg.txt
          curl -sS "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d "chat_id=${TG_CHAT}" \
            --data-urlencode text@/tmp/tg_msg.txt >/dev/null || true
