name: Telegram Test

on:
  # Manuell auslÃ¶sbar mit optionaler Nachricht
  workflow_dispatch:
    inputs:
      message:
        description: "Nachricht an Telegram"
        required: false
        default: "Hallo ðŸ‘‹ â€“ GitHub Actions meldet sich!"
  # Optional: auch bei Push auf main testen
  push:
    branches: [ "main" ]

jobs:
  ping-telegram:
    runs-on: ubuntu-latest
    steps:
      - name: Telegram benachrichtigen
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          INPUT_MESSAGE: ${{ github.event.inputs.message }}
          REPO: ${{ github.repository }}
          REF: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
          SHA: ${{ github.sha }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          set -euo pipefail
          SHORT_SHA="${SHA:0:7}"
          if [ -z "${INPUT_MESSAGE:-}" ]; then
            TEXT="ðŸ”” Test aus ${REPO}\nBranch: ${REF}\nCommit: ${SHORT_SHA} von ${ACTOR}\nRun: ${RUN_URL}"
          else
            TEXT="${INPUT_MESSAGE}\nRun: ${RUN_URL}"
          fi

          # Sende die Nachricht (x-www-form-urlencoded; robust, kein JSON-Escaping nÃ¶tig)
          curl -sS --fail-with-body --retry 5 --retry-all-errors \
            -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TELEGRAM_CHAT_ID}" \
            --data-urlencode "text=${TEXT}" \
            -d "disable_web_page_preview=true"
